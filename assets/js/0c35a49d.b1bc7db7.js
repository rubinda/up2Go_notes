"use strict";(self.webpackChunkup2go_notes=self.webpackChunkup2go_notes||[]).push([[80],{7466:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=n(4848),i=n(8453);const o={sidebar_position:2,sidebar_label:"CLI",description:"How to setup the command line"},l="CLI Setup",r={id:"environment/cli-setup",title:"CLI Setup",description:"How to setup the command line",source:"@site/docs/environment/cli-setup.md",sourceDirName:"environment",slug:"/environment/cli-setup",permalink:"/up2Go_notes/environment/cli-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/rubinda/up2Go_notes/blob/main/docs/environment/cli-setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"CLI",description:"How to setup the command line"},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/up2Go_notes/environment/requirements"},next:{title:"Github",permalink:"/up2Go_notes/environment/git"}},a={},c=[{value:"macOS",id:"macos",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"sf (previously sfdx)",id:"sf-previously-sfdx",level:3},{value:"sf plugins",id:"sf-plugins",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"cli-setup",children:"CLI Setup"}),"\n",(0,t.jsx)(s.h2,{id:"macos",children:"macOS"}),"\n",(0,t.jsx)(s.p,{children:"Follow these steps if you do not wish to use devcontainers with VS Code."}),"\n",(0,t.jsx)(s.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(s.p,{children:["I highly recommed installing ",(0,t.jsx)(s.a,{href:"https://brew.sh/",children:"Homebrew"})," first, since it makes life easier with fewer clicks:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n'})}),"\n",(0,t.jsx)(s.p,{children:"... installing requirements now becomes as simple as:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"brew update && brew install git node@20 openjdk@17 jq\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:['Make sure to follow any additional steps that are required when installing these packages (e.g. manually adding them to your PATH) or you might get a "command not found" error. If you read the output of ',(0,t.jsx)(s.code,{children:"brew install"})," it should inform you if any additional actions are required."]})}),"\n",(0,t.jsx)(s.h3,{id:"sf-previously-sfdx",children:"sf (previously sfdx)"}),"\n",(0,t.jsxs)(s.p,{children:["Salesforce constantly updates sfdx (including major release versions - see ",(0,t.jsx)(s.a,{href:"https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm",children:"moving from sfdx v7 to sf v2"}),"). I'd recommend ",(0,t.jsx)(s.a,{href:"https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm#sfdx_setup_install_cli_npm",children:"installing sf using npm"})," since you can easily switch versions if you need to."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"npm install @salesforce/cli --global\n"})}),"\n",(0,t.jsx)(s.p,{children:"... you can verify if the install was successful with:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"sf --version\n"})}),"\n",(0,t.jsx)(s.h2,{id:"sf-plugins",children:"sf plugins"}),"\n",(0,t.jsx)(s.p,{children:"Once you have sf installed you can run:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"sf plugins install @salesforce/sfdx-scanner sfdx-browserforce-plugin\n"})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var t=n(6540);const i={},o=t.createContext(i);function l(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);